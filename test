// Placeholder: Este archivo ya no contiene la calculadora. Usa client/src/components/CalculadoraProyectos.jsx para la l√≥gica principal.

import React, { useState } from 'react';
import { Calculator, Sparkles, ArrowRight, Download, Eye, Users, TrendingUp, Zap, Shield, Clock, Star, Menu, X, ChevronDown, Check, Plus, Minus, Info } from 'lucide-react';

const CalculadoraProyectos = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [formData, setFormData] = useState({
    projectType: '',
    complexity: 'medium',
    features: [],
    timeline: '4-6',
    budget: '',
    clientName: '',
    email: ''
  });
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [estimatedCost, setEstimatedCost] = useState(null);
  const [isCalculating, setIsCalculating] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const [highlightedFeature, setHighlightedFeature] = useState(null);

  const projectTypes = [
    { id: 'landing', name: 'Landing Page', icon: 'üéØ', basePrice: 1500, description: 'P√°gina √∫nica optimizada para conversi√≥n' },
    { id: 'corporate', name: 'Sitio Corporativo', icon: 'üè¢', basePrice: 3500, description: 'Presencia profesional multi-p√°gina' },
    { id: 'ecommerce', name: 'E-commerce', icon: 'üõí', basePrice: 8000, description: 'Tienda online completa' },
    { id: 'webapp', name: 'Aplicaci√≥n Web', icon: '‚ö°', basePrice: 15000, description: 'Plataforma web interactiva' },
    { id: 'custom', name: 'Proyecto Personalizado', icon: 'üé®', basePrice: 5000, description: 'Soluci√≥n a medida' }
  ];

  const features = [
    { id: 'seo', name: 'Optimizaci√≥n SEO', price: 800, category: 'marketing' },
    { id: 'analytics', name: 'Analytics Avanzado', price: 600, category: 'tracking' },
    { id: 'payment', name: 'Pasarela de Pagos', price: 1200, category: 'ecommerce' },
    { id: 'crm', name: 'Integraci√≥n CRM', price: 1500, category: 'business' },
    { id: 'chat', name: 'Chat en Vivo', price: 400, category: 'support' },
    { id: 'multilang', name: 'Multi-idioma', price: 1000, category: 'localization' },
    { id: 'api', name: 'API Personalizada', price: 2000, category: 'integration' },
    { id: 'mobile', name: 'App M√≥vil', price: 5000, category: 'mobile' }
  ];

  const complexityMultipliers = {
    low: { multiplier: 0.7, label: 'B√°sico', description: 'Funcionalidades est√°ndar' },
    medium: { multiplier: 1, label: 'Intermedio', description: 'Personalizaci√≥n moderada' },
    high: { multiplier: 1.5, label: 'Avanzado', description: 'Altamente personalizado' },
    enterprise: { multiplier: 2.2, label: 'Enterprise', description: 'Soluci√≥n empresarial completa' }
  };

  const calculateEstimate = () => {
    setIsCalculating(true);
    
    setTimeout(() => {
      const selectedProject = projectTypes.find(p => p.id === formData.projectType);
      const basePrice = selectedProject?.basePrice || 0;
      
      const featuresPrice = formData.features.reduce((total, featureId) => {
        const feature = features.find(f => f.id === featureId);
        return total + (feature?.price || 0);
      }, 0);
      
      const complexityMultiplier = complexityMultipliers[formData.complexity].multiplier;
      const timelineMultiplier = formData.timeline === '2-4' ? 1.3 : formData.timeline === '6-8' ? 0.9 : 1;
      
      const totalCost = Math.round((basePrice + featuresPrice) * complexityMultiplier * timelineMultiplier);
      
      setEstimatedCost({
        total: totalCost,
        breakdown: {
          base: basePrice,
          features: featuresPrice,
          complexity: complexityMultiplier,
          timeline: timelineMultiplier
        }
      });
      
      setIsCalculating(false);
      setShowResults(true);
    }, 2000);
  };

  const nextStep = () => {
    if (currentStep < 4) setCurrentStep(currentStep + 1);
  };

  const prevStep = () => {
    if (currentStep > 1) setCurrentStep(currentStep - 1);
  };

  const toggleFeature = (featureId) => {
    setFormData(prev => ({
      ...prev,
      features: prev.features.includes(featureId)
        ? prev.features.filter(id => id !== featureId)
        : [...prev.features, featureId]
    }));
  };

  const resetCalculator = () => {
    setCurrentStep(1);
    setFormData({
      projectType: '',
      complexity: 'medium',
      features: [],
      timeline: '4-6',
      budget: '',
      clientName: '',
      email: ''
    });
    setEstimatedCost(null);
    setShowResults(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
      {/* Animated Background */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -inset-10 opacity-50">
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse"></div>
          <div className="absolute top-3/4 right-1/4 w-96 h-96 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-1000"></div>
          <div className="absolute bottom-1/4 left-1/2 w-96 h-96 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl animate-pulse delay-2000"></div>
        </div>
      </div>

      {/* Navigation */}
      <nav className="relative z-50 px-6 py-4">
        <div className="max-w-7xl mx-auto flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="bg-gradient-to-r from-purple-500 to-pink-500 p-2 rounded-xl">
              <Calculator className="h-8 w-8 text-white" />
            </div>
            <div>
              <h1 className="text-xl font-bold text-white">CalculadoraProyectos</h1>
              <p className="text-sm text-purple-200">Estimaci√≥n inteligente</p>
            </div>
          </div>
          
          <div className="hidden md:flex items-center space-x-8">
            <a href="#features" className="text-purple-200 hover:text-white transition-colors">Caracter√≠sticas</a>
            <a href="#pricing" className="text-purple-200 hover:text-white transition-colors">Precios</a>
            <a href="#about" className="text-purple-200 hover:text-white transition-colors">Nosotros</a>
            <button className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full hover:shadow-lg transform hover:scale-105 transition-all">
              Iniciar Sesi√≥n
            </button>
          </div>

          <button 
            className="md:hidden text-white"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
          </button>
        </div>
      </nav>

      {/* Mobile Menu */}
      {isMenuOpen && (
        <div className="md:hidden absolute top-16 left-0 right-0 z-40 bg-slate-800/95 backdrop-blur-lg border-b border-purple-500/20">
          <div className="px-6 py-4 space-y-4">
            <a href="#features" className="block text-purple-200 hover:text-white transition-colors">Caracter√≠sticas</a>
            <a href="#pricing" className="block text-purple-200 hover:text-white transition-colors">Precios</a>
            <a href="#about" className="block text-purple-200 hover:text-white transition-colors">Nosotros</a>
            <button className="w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full">
              Iniciar Sesi√≥n
            </button>
          </div>
        </div>
      )}

      <div className="relative z-10 max-w-7xl mx-auto px-6 py-12">
        {!showResults ? (
          <>
            {/* Header */}
            <div className="text-center mb-12">
              <div className="inline-flex items-center space-x-2 bg-purple-500/20 backdrop-blur-sm border border-purple-500/30 rounded-full px-4 py-2 mb-6">
                <Sparkles className="h-4 w-4 text-purple-400" />
                <span className="text-sm text-purple-200">Potenciado por IA</span>
              </div>
              
              <h1 className="text-5xl md:text-7xl font-bold text-white mb-6 tracking-tight">
                Estima tu proyecto
                <span className="block text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400">
                  en minutos
                </span>
              </h1>
              
              <p className="text-xl text-purple-200 max-w-2xl mx-auto leading-relaxed">
                Herramienta inteligente que calcula presupuestos precisos para proyectos web usando IA avanzada
              </p>
            </div>

            {/* Progress Bar */}
            <div className="mb-8">
              <div className="flex items-center justify-center space-x-4 mb-4">
                {[1, 2, 3, 4].map((step) => (
                  <div key={step} className="flex items-center">
                    <div className={`w-10 h-10 rounded-full flex items-center justify-center border-2 transition-all ${
                      currentStep >= step 
                        ? 'bg-gradient-to-r from-purple-500 to-pink-500 border-purple-500 text-white' 
                        : 'border-purple-500/30 text-purple-400'
                    }`}>
                      {currentStep > step ? <Check className="h-5 w-5" /> : step}
                    </div>
                    {step < 4 && (
                      <div className={`w-16 h-0.5 transition-all ${
                        currentStep > step ? 'bg-gradient-to-r from-purple-500 to-pink-500' : 'bg-purple-500/30'
                      }`} />
                    )}
                  </div>
                ))}
              </div>
              
              <div className="text-center">
                <span className="text-purple-200 text-sm">
                  Paso {currentStep} de 4
                </span>
              </div>
            </div>

            {/* Form Container */}
            <div className="max-w-4xl mx-auto">
              <div className="bg-white/10 backdrop-blur-lg border border-white/20 rounded-3xl p-8 shadow-2xl">
                {/* Step 1: Project Type */}
                {currentStep === 1 && (
                  <div className="space-y-6">
                    <h2 className="text-3xl font-bold text-white mb-8 text-center">
                      ¬øQu√© tipo de proyecto necesitas?
                    </h2>
                    
                    <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                      {projectTypes.map((type) => (
                        <button
                          key={type.id}
                          onClick={() => setFormData({...formData, projectType: type.id})}
                          className={`p-6 rounded-2xl border-2 transition-all hover:scale-105 text-left ${
                            formData.projectType === type.id
                              ? 'border-purple-500 bg-purple-500/20 shadow-lg shadow-purple-500/25'
                              : 'border-white/20 bg-white/5 hover:border-purple-500/50'
                          }`}
                        >
                          <div className="text-4xl mb-3">{type.icon}</div>
                          <h3 className="text-lg font-semibold text-white mb-2">{type.name}</h3>
                          <p className="text-sm text-purple-200 mb-3">{type.description}</p>
                          <div className="text-purple-400 font-semibold">
                            Desde ${type.basePrice.toLocaleString()}
                          </div>
                        </button>
                      ))}
                    </div>
                  </div>
                )}

                {/* Step 2: Complexity & Features */}
                {currentStep === 2 && (
                  <div className="space-y-8">
                    <h2 className="text-3xl font-bold text-white mb-8 text-center">
                      Nivel de complejidad y caracter√≠sticas
                    </h2>
                    
                    {/* Complexity */}
                    <div>
                      <h3 className="text-xl font-semibold text-white mb-4">Complejidad del proyecto</h3>
                      <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
                        {Object.entries(complexityMultipliers).map(([key, value]) => (
                          <button
                            key={key}
                            onClick={() => setFormData({...formData, complexity: key})}
                            className={`p-4 rounded-xl border-2 transition-all ${
                              formData.complexity === key
                                ? 'border-purple-500 bg-purple-500/20'
                                : 'border-white/20 bg-white/5 hover:border-purple-500/50'
                            }`}
                          >
                            <div className="text-center">
                              <div className="text-lg font-semibold text-white">{value.label}</div>
                              <div className="text-sm text-purple-200 mt-1">{value.description}</div>
                              <div className="text-purple-400 text-sm mt-2">
                                x{value.multiplier}
                              </div>
                            </div>
                          </button>
                        ))}
                      </div>
                    </div>

                    {/* Features */}
                    <div>
                      <h3 className="text-xl font-semibold text-white mb-4 flex items-center gap-2">
                        Caracter√≠sticas adicionales
                        <Info className="h-4 w-4 text-purple-300 cursor-pointer" title="Selecciona las funcionalidades extra que tu proyecto necesita. Cada una suma al costo final." />
                      </h3>
                      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-3">
                        {features.length === 0 && (
                          <div className="text-purple-300 text-center py-8">
                            <Sparkles className="mx-auto mb-2" />
                            Empieza agregando una caracter√≠stica...
                          </div>
                        )}
                        {features.map((feature) => (
                          <button
                            key={feature.id}
                            onClick={() => {
                              toggleFeature(feature.id);
                              setHighlightedFeature(feature.id);
                              setTimeout(() => setHighlightedFeature(null), 700);
                            }}
                            className={`p-4 rounded-xl border-2 transition-all flex items-center justify-between relative group ${
                              formData.features.includes(feature.id)
                                ? 'border-purple-500 bg-purple-500/20'
                                : 'border-white/20 bg-white/5 hover:border-purple-500/50'
                            } ${highlightedFeature === feature.id ? 'animate-pulse border-pink-400' : ''}`}
                            aria-label={feature.name}
                            title={feature.name}
                          >
                            <div className="text-left">
                              <div className="text-white font-medium flex items-center gap-1">
                                {feature.name}
                                <Info className="h-3 w-3 text-purple-300 ml-1" title={`M√°s info sobre ${feature.name}`} />
                              </div>
                              <div className="text-purple-400 text-sm">+${feature.price.toLocaleString()}</div>
                            </div>
                            {formData.features.includes(feature.id) && (
                              <Check className="h-5 w-5 text-purple-400" />
                            )}
                          </button>
                        ))}
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 3: Timeline & Budget */}
                {currentStep === 3 && (
                  <div className="space-y-8">
                    <h2 className="text-3xl font-bold text-white mb-8 text-center">
                      Tiempo y presupuesto
                    </h2>
                    
                    <div className="grid md:grid-cols-2 gap-8">
                      {/* Timeline */}
                      <div>
                        <h3 className="text-xl font-semibold text-white mb-4">Plazo de entrega (semanas)</h3>
                        <div className="space-y-3">
                          {[
                            { value: '2-4', label: '2-4 semanas', desc: 'Entrega r√°pida (+30%)' },
                            { value: '4-6', label: '4-6 semanas', desc: 'Plazo est√°ndar' },
                            { value: '6-8', label: '6-8 semanas', desc: 'Plazo extendido (-10%)' },
                            { value: '8+', label: '8+ semanas', desc: 'Sin prisa' }
                          ].map((option) => (
                            <button
                              key={option.value}
                              onClick={() => setFormData({...formData, timeline: option.value})}
                              className={`w-full p-4 rounded-xl border-2 transition-all text-left ${
                                formData.timeline === option.value
                                  ? 'border-purple-500 bg-purple-500/20'
                                  : 'border-white/20 bg-white/5 hover:border-purple-500/50'
                              }`}
                            >
                              <div className="text-white font-medium">{option.label}</div>
                              <div className="text-purple-200 text-sm">{option.desc}</div>
                            </button>
                          ))}
                        </div>
                      </div>

                      {/* Budget Range */}
                      <div>
                        <h3 className="text-xl font-semibold text-white mb-4">Rango de presupuesto</h3>
                        <div className="space-y-3">
                          {[
                            { value: '0-5000', label: '$0 - $5,000', desc: 'Presupuesto b√°sico' },
                            { value: '5000-15000', label: '$5,000 - $15,000', desc: 'Presupuesto medio' },
                            { value: '15000-30000', label: '$15,000 - $30,000', desc: 'Presupuesto alto' },
                            { value: '30000+', label: '$30,000+', desc: 'Presupuesto enterprise' }
                          ].map((option) => (
                            <button
                              key={option.value}
                              onClick={() => setFormData({...formData, budget: option.value})}
                              className={`w-full p-4 rounded-xl border-2 transition-all text-left ${
                                formData.budget === option.value
                                  ? 'border-purple-500 bg-purple-500/20'
                                  : 'border-white/20 bg-white/5 hover:border-purple-500/50'
                              }`}
                            >
                              <div className="text-white font-medium">{option.label}</div>
                              <div className="text-purple-200 text-sm">{option.desc}</div>
                            </button>
                          ))}
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {/* Step 4: Contact Info */}
                {currentStep === 4 && (
                  <div className="space-y-6">
                    <h2 className="text-3xl font-bold text-white mb-8 text-center">
                      Informaci√≥n de contacto
                    </h2>
                    
                    <div className="max-w-md mx-auto space-y-6">
                      <div>
                        <label className="block text-white font-medium mb-2">Nombre del cliente</label>
                        <input
                          type="text"
                          value={formData.clientName}
                          onChange={(e) => setFormData({...formData, clientName: e.target.value})}
                          className="w-full p-4 rounded-xl bg-white/10 border border-white/20 text-white placeholder-purple-300 focus:border-purple-500 focus:outline-none backdrop-blur-sm"
                          placeholder="Tu nombre completo"
                        />
                      </div>
                      
                      <div>
                        <label className="block text-white font-medium mb-2">Email</label>
                        <input
                          type="email"
                          value={formData.email}
                          onChange={(e) => setFormData({...formData, email: e.target.value})}
                          className="w-full p-4 rounded-xl bg-white/10 border border-white/20 text-white placeholder-purple-300 focus:border-purple-500 focus:outline-none backdrop-blur-sm"
                          placeholder="tu@email.com"
                        />
                      </div>

                      <div className="bg-purple-500/20 border border-purple-500/30 rounded-xl p-4">
                        <div className="flex items-start space-x-3">
                          <Shield className="h-5 w-5 text-purple-400 mt-0.5" />
                          <div>
                            <p className="text-sm text-purple-200">
                              Tu informaci√≥n est√° segura. Solo la usamos para enviarte la estimaci√≥n y futuras comunicaciones sobre tu proyecto.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {/* Navigation Buttons */}
                <div className="flex flex-col sm:flex-row justify-between items-center mt-8 pt-6 border-t border-white/20 gap-4">
                  {currentStep > 1 && (
                    <button
                      onClick={prevStep}
                      className="flex items-center space-x-2 px-6 py-3 rounded-xl bg-white/10 border border-white/20 text-white hover:bg-white/20 transition-all"
                      aria-label="Anterior"
                      title="Anterior"
                    >
                      <ArrowRight className="h-4 w-4 rotate-180" />
                      <span>Anterior</span>
                    </button>
                  )}
                  <div className="flex-1"></div>
                  {currentStep < 4 ? (
                    <button
                      onClick={nextStep}
                      disabled={
                        (currentStep === 1 && !formData.projectType) ||
                        (currentStep === 4 && (!formData.clientName || !formData.email))
                      }
                      className="flex items-center space-x-2 px-6 py-3 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:shadow-lg transform hover:scale-105 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                      aria-label="Siguiente"
                      title="Siguiente"
                    >
                      <span>Siguiente</span>
                      <ArrowRight className="h-4 w-4" />
                    </button>
                  ) : (
                    <button
                      onClick={calculateEstimate}
                      disabled={!formData.clientName || !formData.email || isCalculating}
                      className="flex items-center space-x-2 px-8 py-4 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 text-white font-semibold hover:shadow-lg transform hover:scale-105 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
                      aria-label="Calcular Estimaci√≥n"
                      title="Calcular Estimaci√≥n"
                    >
                      {isCalculating ? (
                        <div className="flex items-center space-x-2">
                          <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                          <span>Calculando...</span>
                        </div>
                      ) : (
                        <>
                          <Sparkles className="h-5 w-5" />
                          <span>Calcular Estimaci√≥n</span>
                        </>
                      )}
                    </button>
                  )}
                </div>
              </div>
            </div>
          </>
        ) : (
          /* Results View */
          <div className="max-w-4xl mx-auto">
            <div className="text-center mb-8">
              <div className="inline-flex items-center space-x-2 bg-green-500/20 backdrop-blur-sm border border-green-500/30 rounded-full px-4 py-2 mb-6">
                <Check className="h-4 w-4 text-green-400" />
                <span className="text-sm text-green-200">Estimaci√≥n completada</span>
              </div>
              
              <h1 className="text-4xl md:text-5xl font-bold text-white mb-4">
                Tu estimaci√≥n est√° lista
              </h1>
              
              <p className="text-xl text-purple-200">
                Basada en tus requerimientos y potenciada por IA
              </p>
            </div>

            <div className="grid lg:grid-cols-3 gap-8">
              {/* Main Result */}
              <div className="lg:col-span-2">
                <div className="bg-white/10 backdrop-blur-lg border border-white/20 rounded-3xl p-8 shadow-2xl">
                  <div className="text-center mb-8">
                    <div className="text-6xl md:text-7xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400 mb-4">
                      ${estimatedCost?.total.toLocaleString()}
                    </div>
                    <p className="text-xl text-purple-200">Costo estimado del proyecto</p>
                  </div>

                  {/* Breakdown */}
                  <div className="space-y-4 mb-8">
                    <h3 className="text-lg font-semibold text-white">Desglose de costos:</h3>
                    
                    <div className="space-y-3">
                      <div className="flex justify-between items-center p-3 rounded-xl bg-white/5">
                        <span className="text-purple-200">Proyecto base</span>
                        <span className="text-white font-semibold">${estimatedCost?.breakdown.base.toLocaleString()}</span>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 rounded-xl bg-white/5">
                        <span className="text-purple-200">Caracter√≠sticas adicionales</span>
                        <span className="text-white font-semibold">${estimatedCost?.breakdown.features.toLocaleString()}</span>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 rounded-xl bg-white/5">
                        <span className="text-purple-200">Ajuste por complejidad</span>
                        <span className="text-white font-semibold">x{estimatedCost?.breakdown.complexity}</span>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 rounded-xl bg-white/5">
                        <span className="text-purple-200">Ajuste por timeline</span>
                        <span className="text-white font-semibold">x{estimatedCost?.breakdown.timeline}</span>
                      </div>
                    </div>
                  </div>

                  {/* Action Buttons */}
                  <div className="flex flex-col sm:flex-row gap-4">
                    <button className="flex-1 flex items-center justify-center space-x-2 px-6 py-4 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 text-white font-semibold hover:shadow-lg transform hover:scale-105 transition-all">
                      <Download className="h-5 w-5" />
                      <span>Descargar PDF</span>
                    </button>
                    
                    <button className="flex-1 flex items-center justify-center space-x-2 px-6 py-4 rounded-xl bg-white/10 border border-white/20 text-white hover:bg-white/20 transition-all">
                      <Eye className="h-5 w-5" />
                      <span>Ver Detalles</span>
                    </button>
                  </div>
                </div>
              </div>

              {/* Side Panel */}
              <div className="space-y-6">
                {/* Project Summary */}
                <div className="bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl p-6">
                  <h3 className="text-lg font-semibold text-white mb-4">Resumen del proyecto</h3>
                  
                  <div className="space-y-3 text-sm">
                    <div className="flex justify-between">
                      <span className="text-purple-200">Tipo:</span>
                      <span className="text-white">
                        {projectTypes.find(p => p.id === formData.projectType)?.name}
                      </span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span className="text-purple-200">Complejidad:</span>
                      <span className="text-white">
                        {complexityMultipliers[formData.complexity].label}
                      </span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span className="text-purple-200">Timeline:</span>
                      <span className="text-white">{formData.timeline} semanas</span>
                    </div>
                    
                    <div className="flex justify-between">
                      <span className="text-purple-200">Caracter√≠sticas:</span>
                      <span className="text-white">{formData.features.length}</span>
                    </div>
                  </div>
                </div>

                {/* Next Steps */}
                <div className="bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl p-6">
                  <h3 className="text-lg font-semibold text-white mb-4">Pr√≥ximos pasos</h3>
                  
                  <div className="space-y-3">
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 rounded-full bg-purple-500 flex items-center justify-center text-white text-sm font-semibold">1</div>
                      <div>
                        <p className="text-white text-sm font-medium">Revisi√≥n de propuesta</p>
                        <p className="text-purple-200 text-xs">Analizaremos tus requerimientos en detalle</p>
                      </div>
                    </div>
                    
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 rounded-full bg-purple-500 flex items-center justify-center text-white text-sm font-semibold">2</div>
                      <div>
                        <p className="text-white text-sm font-medium">Propuesta personalizada</p>
                        <p className="text-purple-200 text-xs">Te enviaremos una cotizaci√≥n detallada</p>
                      </div>
                    </div>
                    
                    <div className="flex items-start space-x-3">
                      <div className="w-6 h-6 rounded-full bg-purple-500 flex items-center justify-center text-white text-sm font-semibold">3</div>
                      <div>
                        <p className="text-white text-sm font-medium">Inicio del proyecto</p>
                        <p className="text-purple-200 text-xs">Comenzamos el desarrollo una vez aprobado</p>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Contact */}
                <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 backdrop-blur-lg border border-purple-500/30 rounded-2xl p-6">
                  <h3 className="text-lg font-semibold text-white mb-2">¬øTienes preguntas?</h3>
                  <p className="text-purple-200 text-sm mb-4">Nuestro equipo est√° listo para ayudarte</p>
                  
                  <button className="w-full flex items-center justify-center space-x-2 px-4 py-3 rounded-xl bg-white/20 text-white hover:bg-white/30 transition-all">
                    <span>Contactar ahora</span>
                    <ArrowRight className="h-4 w-4" />
                  </button>
                </div>
              </div>
            </div>

            {/* Reset Button */}
            <div className="text-center mt-8">
              <button
                onClick={resetCalculator}
                className="inline-flex items-center space-x-2 px-6 py-3 rounded-xl bg-white/10 border border-white/20 text-white hover:bg-white/20 transition-all"
              >
                <Plus className="h-4 w-4" />
                <span>Nueva estimaci√≥n</span>
              </button>
            </div>
          </div>
        )}
      </div>

      {/* Features Section */}
      <div id="features" className="relative z-10 max-w-7xl mx-auto px-6 py-24">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
            ¬øPor qu√© elegir nuestra calculadora?
          </h2>
          <p className="text-xl text-purple-200 max-w-3xl mx-auto">
            Tecnolog√≠a de vanguardia que revoluciona la forma de estimar proyectos web
          </p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {[
            {
              icon: <Zap className="h-8 w-8" />,
              title: "IA Avanzada",
              description: "Algoritmos de machine learning que aprenden de miles de proyectos para darte estimaciones precisas."
            },
            {
              icon: <Clock className="h-8 w-8" />,
              title: "Resultados Instant√°neos",
              description: "Obt√©n tu estimaci√≥n en segundos, no en d√≠as. Acelera tu proceso de ventas y cierra m√°s deals."
            },
            {
              icon: <Shield className="h-8 w-8" />,
              title: "Datos Seguros",
              description: "Toda tu informaci√≥n est√° protegida con encriptaci√≥n de nivel empresarial y cumplimiento GDPR."
            },
            {
              icon: <TrendingUp className="h-8 w-8" />,
              title: "Precisi√≥n Comprobada",
              description: "95% de precisi√≥n en nuestras estimaciones basada en m√°s de 10,000 proyectos completados."
            },
            {
              icon: <Users className="h-8 w-8" />,
              title: "Equipo Experto",
              description: "Respaldado por desarrolladores senior con m√°s de 15 a√±os de experiencia en la industria."
            },
            {
              icon: <Star className="h-8 w-8" />,
              title: "Soporte Premium",
              description: "Asistencia personalizada y consultor√≠a gratuita para optimizar tus proyectos."
            }
          ].map((feature, index) => (
            <div key={index} className="bg-white/10 backdrop-blur-lg border border-white/20 rounded-2xl p-6 hover:bg-white/15 transition-all">
              <div className="text-purple-400 mb-4">{feature.icon}</div>
              <h3 className="text-xl font-semibold text-white mb-3">{feature.title}</h3>
              <p className="text-purple-200">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Footer */}
      <footer className="relative z-10 border-t border-white/20 mt-24">
        <div className="max-w-7xl mx-auto px-6 py-12">
          <div className="grid md:grid-cols-4 gap-8">
            <div className="md:col-span-2">
              <div className="flex items-center space-x-3 mb-4">
                <div className="bg-gradient-to-r from-purple-500 to-pink-500 p-2 rounded-xl">
                  <Calculator className="h-6 w-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-bold text-white">CalculadoraProyectos</h3>
                  <p className="text-sm text-purple-200">by johanseb15</p>
                </div>
              </div>
              <p className="text-purple-200 mb-4">
                La herramienta m√°s avanzada para estimar proyectos web. Potenciada por IA y dise√±ada para agencias digitales que buscan la excelencia.
              </p>
              <div className="flex space-x-4">
                <button className="text-purple-400 hover:text-white transition-colors">GitHub</button>
                <button className="text-purple-400 hover:text-white transition-colors">LinkedIn</button>
                <button className="text-purple-400 hover:text-white transition-colors">Twitter</button>
              </div>
            </div>
            
            <div>
              <h4 className="text-white font-semibold mb-4">Producto</h4>
              <div className="space-y-2">
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Caracter√≠sticas</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Precios</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">API</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Documentaci√≥n</a>
              </div>
            </div>
            
            <div>
              <h4 className="text-white font-semibold mb-4">Soporte</h4>
              <div className="space-y-2">
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Centro de ayuda</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Contacto</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">Status</a>
                <a href="#" className="block text-purple-200 hover:text-white transition-colors">T√©rminos</a>
              </div>
            </div>
          </div>
          
          <div className="border-t border-white/20 mt-8 pt-8 text-center">
            <p className="text-purple-200">
              ¬© 2025 CalculadoraProyectos. Todos los derechos reservados. Desarrollado con ‚ù§Ô∏è por johanseb15
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default CalculadoraProyectos;